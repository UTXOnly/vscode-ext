{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Disk Integration Configuration",
  "type": "object",
  "properties": {
    "init_config": {
      "type": "object",
      "properties": {
        "file_system_global_exclude": {
          "type": "array",
          "default": [
            "iso9660$",
            "tracefs$"
          ],
          "items": {
            "type": "string"
          },
          "description": "Instruct the check to always add these patterns to `file_system_exclude`.\n\nWARNING: Overriding these defaults could negatively impact your system or\nthe performance of the check."
        },
        "device_global_exclude": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Instruct the check to always add these patterns to `device_exclude`.\n\nWARNING: Overriding these defaults could negatively impact your system or\nthe performance of the check."
        },
        "mount_point_global_exclude": {
          "type": "array",
          "default": [
            "(/host)?/proc/sys/fs/binfmt_misc$"
          ],
          "items": {
            "type": "string"
          },
          "description": "Instruct the check to always add these patterns to `mount_point_exclude`.\n\nWARNING: Overriding these defaults could negatively impact your system or\nthe performance of the check."
        },
        "min_collection_interval": {
          "type": "integer",
          "description": "Minimum collection interval in seconds",
          "default": 15
        }
      },
      "description": "Initial configuration for the integration"
    },
    "instances": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "use_mount": {
            "type": "boolean",
            "default": false,
            "description": "If enabled, metrics are tagged using mount points (for example `device:/`) instead of volumes\n(for example `device:/dev/disk1s5`)."
          },
          "all_partitions": {
            "type": "boolean",
            "default": false,
            "description": "Instruct the check to collect from partitions even without device names.\nSetting `use_mount` to true is strongly recommended in this case."
          },
          "disable_generic_tags": {
            "type": "boolean",
            "description": "Disable generic tags to avoid conflicts with other integrations",
            "default": false
          },
          "file_system_include": {
            "type": "array",
            "default": [
              "ext[34]$",
              "ntfs$"
            ],
            "items": {
              "type": "string"
            },
            "description": "Instruct the check to only collect from matching file systems.\n\nCharacter casing is ignored. For convenience, the regular expressions\nstart matching from the beginning and therefore to match anywhere you\nmust prepend `.*`. For exact matches append `$`."
          },
          "file_system_exclude": {
            "type": "array",
            "default": [
              "tmpfs$",
              "rootfs$",
              "autofs$"
            ],
            "items": {
              "type": "string"
            },
            "description": "Instruct the check to not collect from matching file systems.\n\nCharacter casing is ignored. For convenience, the regular expressions\nstart matching from the beginning and therefore to match anywhere you\nmust prepend `.*`. For exact matches append `$`.\n\nDevices from pseudo or memory-based file systems can be excluded by disabling the\n`include_all_devices` option.\n\nWhen conflicts arise, this will override `file_system_include`."
          },
          "device_include": {
            "type": "array",
            "default": [
              "/dev/sda[1-3]",
              "C:"
            ],
            "items": {
              "type": "string"
            },
            "description": "Instruct the check to only collect from matching devices.\n\nCharacter casing is ignored on Windows. For convenience, the regular\nexpressions start matching from the beginning and therefore to match\nanywhere you must prepend `.*`. For exact matches append `$`."
          },
          "device_exclude": {
            "type": "array",
            "default": [
              "/dev/sde",
              "[FJ]:"
            ],
            "items": {
              "type": "string"
            },
            "description": "Instruct the check to not collect from matching devices.\n\nCharacter casing is ignored on Windows. For convenience, the regular\nexpressions start matching from the beginning and therefore to match\nanywhere you must prepend `.*`. For exact matches append `$`.\n\nWhen conflicts arise, this will override `device_include`."
          },
          "mount_point_include": {
            "type": "array",
            "default": [
              "/dev/sda[1-3]",
              "C:"
            ],
            "items": {
              "type": "string"
            },
            "description": "Instruct the check to only collect from matching mount points.\n\nCharacter casing is ignored on Windows. For convenience, the regular\nexpressions start matching from the beginning and therefore to match\nanywhere you must prepend `.*`. For exact matches append `$`."
          },
          "mount_point_exclude": {
            "type": "array",
            "default": [
              "/proc/sys/fs/binfmt_misc",
              "/dev/sde",
              "[FJ]:"
            ],
            "items": {
              "type": "string"
            },
            "description": "Instruct the check to not collect from matching mount points.\n\nCharacter casing is ignored on Windows. For convenience, the regular\nexpressions start matching from the beginning and therefore to match\nanywhere you must prepend `.*`. For exact matches append `$`."
          },
          "include_all_devices": {
            "type": "boolean",
            "default": true,
            "description": "Instruct the check to collect from all devices, including non-physical devices.\nSet this to false to exclude pseudo, memory, duplicate or inaccessible file systems.\n\nFor more fine-grained control, use the inclusion and exclusion options."
          },
          "service_check_rw": {
            "type": "boolean",
            "default": false,
            "description": "Instruct the check to notify based on partition state.\n\nread-write -> OK\nread-only  -> CRITICAL\nother      -> UNKNOWN"
          },
          "tag_by_filesystem": {
            "type": "boolean",
            "default": false,
            "description": "Instruct the check to tag all disks with their file system e.g. filesystem:ntfs."
          },
          "tag_by_label": {
            "type": "boolean",
            "default": true,
            "description": "Instruct the check to tag all the metrics with disk label if there is one.\nWorks on Linux only."
          },
          "blkid_cache_file": {
            "type": "string",
            "default": null,
            "description": "Instruct the check to read the labels from the blkid cache file instead of `blkid` executable.\nThis parameter is used only if `tag_by_label` is true. It is incompatible with `use_lsblk`.\nWorks on Linux only."
          },
          "use_lsblk": {
            "type": "boolean",
            "default": false,
            "description": "Instruct the check to read the labels from the `lsblk` executable instead of `blkid` executable.\nThis parameter is used only if `tag_by_label` is true. It is incompatible with `blkid_cache_file`.\nWorks on Linux only."
          },
          "device_tag_re": {
            "type": "object",
            "default": {
              "/san/.*": "device_type:san",
              "/dev/sda3": "role:db,disk_size:large",
              "c:": "volume:boot"
            },
            "description": "Instruct the check to apply additional tags to matching\ndevices (or mount points if `use_mount` is true).\n\nCharacter casing is ignored on Windows. Multiple comma-separated\ntags are supported. You must properly quote the string if the\npattern contains special characters e.g. colons."
          },
          "min_disk_size": {
            "type": "number",
            "default": 0,
            "description": "Exclude devices with a total disk size less than a minimum value (in MiB)"
          },
          "timeout": {
            "type": "integer",
            "default": 5,
            "description": "Timeout of the disk query in seconds"
          },
          "create_mounts": {
            "type": "array",
            "default": [
              {
                "mountpoint": "s:",
                "user": "auser",
                "password": "somepassword",
                "host": "smbserver",
                "share": "space"
              },
              {
                "mountpoint": "n:",
                "host": "nfsserver",
                "share": "/mnt/nfs_share",
                "type": "nfs"
              }
            ],
            "items": {
              "type": "object",
              "properties": {
                "0": {
                  "type": "string"
                },
                "1": {
                  "type": "string"
                },
                "2": {
                  "type": "string"
                },
                "3": {
                  "type": "string"
                },
                "4": {
                  "type": "string"
                },
                "5": {
                  "type": "string"
                }
              }
            },
            "description": "On Windows, instruct the check to create one or more network\nmounts, and have the check collect metrics for the mounted devices.\n\nUses the provided username and password (if provided and necessary)\nto create an SMB or NFS mount. If `type` is not specified, then\nthe operating system will choose the best available network filesystem\nbased on the other parameters. If `type` is specified, then any type\nother than `nfs` will default to an SMB file share."
          },
          "lowercase_device_tag": {
            "type": "boolean",
            "default": false,
            "description": "Enable this to lowercase the \"device\" tags for both partition and disk metrics.\nThis is useful only in very specific circumstances:\n  1. Your \"device\" tag value is uppercase and your host is running on Linux.\n  2. You cannot use the \"device_name\" tag."
          }
        },
        "required": []
      },
      "description": "Integration instances configuration"
    }
  },
  "required": [
    "instances"
  ],
  "additionalProperties": false
}